swirl()
ACCompar(20)
swirl()
library(swirl)
swirl()
swirl()
lamb <- 5/94.32
lamb + c(-1,1) * qnorm(.975)*sqrt(lamb/t)
lamb + c(-1,1) * qnorm(.975)*sqrt(lamb/5)
lamb + c(-1,1) * qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32, lamb$conf)
poisson.test(5, 94.32, x$conf)
poisson.test(5, 94.32)
poisson.test(5, 94.32)$conf
myplot(2)
myplot(20)
myplot2(2)
qt(.975, 2)
myplot2(20)
bye()
subject <- c(1,2,3,4,5)
baseline <- c(140,138,150,148,135)
week2 <- c(132,135,151,146,130)
examinations <- data.frame(subject, baseline, week2)
examinations
test <- t.test(baseline, week2, alt = "two.sided", paired = TRUE)
pval <- test$p.value
round(pval,3)
source('~/.active-rstudio-document', echo=TRUE)
swirl()
sleep
swirl()
swirl()
myplot(2)
my plot(2)
myplot(2)
swirl()
library(swirl)
swirl()
fit <- lm(y~x, out2)
plot(fit, which=1)
fitno <- lm(y~x, out2[-1,])
plot(fitno, which=1)
coef(fit)-coef(fitno)
head(dfbeat(fit))
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(deviance(fit)/df(fit))
sigma <- sqrt(deviance(fit)/df1(fit))
sigma <- sqrt(deviance(fit)/df(fit, 1))
sigma <- sqrt(deviance(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- sigma * sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1 * sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
?geom_boxplot
library(ggplot2)
?geom_boxplot
?boxplot
dy <- predict(fitno, out2)-predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
ones <- rep(1, nrow(galton))
lm(child~ones+parent-1, galton)
lm(child~parent,galton)
lm(child~1, galton)
head(trees)
fit <- lm(Volume~Girth+Height+Constant-1, trees)
trees2 <- eliminate("Girth", trees)
head(trees)
head(trees2)
fit2 <- lm(Volume ~ Height+Constant - 1, trees2)
lapply(list(fit,fit2), coef)
lm(Fertility~., swiss)
all <- lm(Fertility~., swiss)
summary(a)
summary(all)
lm(Fertility~Agriculture, swiss)
summary(lm(Fertility~Agriculture, swiss))
cor(Examination, Education)
cor("Examination", "Education")
cor("Examination")
cor(Examination, Education, swiss)
cor(Examination, Education)
cor(Education, Examination)
cor()
cor(Education)
cor(swiss)
cor(swiss$Examination, swiss$Education)
cor(swiss$Education, swiss$Agriculture)
makelms(swiss)
makelms()
ec <- sum(swiss$Examination, swiss$Catholic)
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility~ . + ec)
efit <- lm(Fertility~ . + ec, swiss)
all$coef - efit$coefficients
all$coef - efit$coef
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays, 15)
Ax
sA
summary(InsectSprays[,2])
sapply(InsectSprays)
sapply(InsectSprays, class)
fit <- lm(count~spray, InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count~spray - 1)
nfit <- lm(count~spray - 1, swiss)
nfit <- lm(count~spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count~., spray2)
fit2 <- lm(count~spray, spray2)
fit2 <- lm(spray2)
fit2 <- lm(count~spray, spray2)
fit2
fit2 <- lm(count~spray2, InsectSprays)
fit2
summary(fit2)$coef
mean(sC)
fit$coef[2]-fit$coef[3]/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
?boxplot
?names
?boxplot
swirl()
main()
?info
info()
play()
nxt()
play()
nxt()
info()
skip()
main()
dim(hunger)
948
names(hunger)
play()
str(hunger)
nxt()
fit <- lm(hunger~Year, hunger)
fit <- lm(hunger~Year)
fit <- lm(hunger~year)
fit
fit <- lm(hunger$numeric~hunger$Year)
fit <- lm(hunger$Numeric~hunger$Year)
summary(fit)$coef
fit <- lm(hunger$Numeric~hunger$Year[hunger$Sex=="Female"])
fit <- lm(hunger$Numeric[hunger$Sex=="Female"]~hunger$Year)
fit <- lm(hunger$Numeric~hunger$Year)
fit <- lm(hunger$Numeric[hunger$Sex=="Female"]~hunger$Year[hunger$Sex=="Female"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"]~hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"]~hunger$Year[hunger$Sex=="Male"])
lmBoth <- lm(hunger$Numeric~ hunger$Year + hunger$Sex)
summary(lmBoth)
lmInter <- lm(hunger$Numeric~hunger$Year + hunger$Sex, + hunger$Sex*hunger$Year, hunger)
lmInter <- lm(hunger$Numeric~hunger$Year + hunger$Sex + hunger$Sex*hunger$Year, hunger)
summary(lmInter)
simbias()
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility~Agriculture)
fit1 <- lm(Fertility~Agriculture, swiss)
fit3 <- lm(Fertility, Agriculture + Examination + Education, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- deviance(fit1)- deviance(fit3)
n <- (deviance(fit1)- deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility~.,swiss)
vif(mdl)
mdl2 <- lm(Fertility~. - Examination,swiss)
vif(mdl2)
main()
main()
main()
play()
install.packages("GGally")
?ggpairs
library(GGally)
?ggpairs
ggpairs(mtcars)
data("mtcars")
fit <- lm(mpg~weight * factor(cyl))
fit <- lm(mpg~wt * factor(cyl))
names(mtcars)
fit <- lm(mpg~cyl * factor(wt))
data(mtcars)
fit <- lm(mpg~wt * factor(cyl), mtcars)
summary(fit)
mtcars
fit <- lm(mpg~factor(cyl) + wt, mtcars)
fit
fit <- lm(mpg~wt * factor(cyl), mtcars)
fit
fit <- lm(mpg~factor(cyl) + wt, mtcars)
fit
?ggpairs
?list
?ggpairs
?pairs
install.packages("bestglm")
swirl()
swirl()
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975, 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1,1) * .975 * (s/sqrt(10))
mn + c(-1,1) * qt(.975,10-1) * (s/sqrt(10))
mn + c(-1,1) * qt(.975,9) * (s/sqrt(10))
mn + c(-1,1)*qt(.975,10-1)*s/sqrt(10)
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)$conf.int
sp <- (8-1)*(15.34)^2+(21-1)*(18.23-1)^2
sp <- (8-1)*(15.34)^2+(21-1)*(18.23)^2
ns <- (7+20)/2
ns <- 27
sp <- sqrt(sp/ns)
(132.86-127.44) + c(-1,1) * qt(.975, ns)*sp*sqrt((1/8)+(1/21))
(132.86-127.44) + c(-1,1) * qt(.975, ns)*sp*sqrt(1/8+1/21)
132.86-127.44 + c(-1,1) * qt(.975, ns)*sp*sqrt(1/8+1/21)
sp <- sqrt(var(g1, g2)/18)
sp <- sqrt(9*var(g1)+9*var(g2)/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1) *sp*sqrt(1/10+1/10)
md + c(-1,1)*qt(.975,18) *sp*sqrt(1/10+1/10)
t.test(g2-g1, paired=FALSE, var.equal = TRUE)
t.test(g2, g1, paired=FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired=TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/(8-1) + 18.23^4/21^2/(21-1)
mydf <- num/den
132.86-127.44 + c(-1,1)*qt(.975,mydf)*(15.34^2/(8-1) + (18.23^2/(21-1))
132.86-127.44 + c(-1,1)*qt(.975,mydf)*(15.34^2/(8-1) + (18.23^2/(21-1))
132.86-127.44 + c(-1,1)*qt(.975,mydf)*(15.34^2/7 + 18.23^2/20)
132.86-127.44 + c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/7 + 18.23^2/20)
132.86-127.44 + c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
play()
install.packages("caret")
library(caret)
swirl()
10/sqrt(100)
2
(32-30)/(10/sqrt(16))
16-1
qt(.95, 15)
dim(fs)
t.test(fs$fheight, fs$sheight, paired = TRUE)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
.0039
.035
mybin[7]
mybin[8]
6
mybin[6]
skip()
swirl()
library(swirl)
swirl()
pt(2.5, 15, lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6,8, .5, lower.tail = FALSE)
pbinom(7,8, .5, lower.tail = TRUE)
ppois(9, 5, lower.tail = FALSE)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, mean=30, lower.tail = FALSE)
pnorm(30+z, mean=32, lower.tail = FALSE)
pnorm(30+z, mean=32, sd=1, lower.tail = FALSE)
pnorm(30+z*2, mean=32, sd=1, lower.tail = FALSE)
pnorm(30+z*2, mean=32, sd=2, lower.tail = FALSE)
power.t.test(n=16, delta = 2/4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n=16, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n=16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2/4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power=.8, n=26, sd=1)$delta
power.t.test(power=.8, n=26, sd=1, ttype = "one.sample", alt = "one.sided")$delta
power.t.test(power=.8, n=26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power=.8, n=27, sd=1, type = "one.sample", alt = "one.sided")$delta
install.packages("GTK+")
library(RMySQL)
install.packages("sqldf")
source("hhtp://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
fileUrl <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "asc.csv", method = curl)
fileUrl <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "asc.csv", method = "curl")
acs <- data.table("acs.csv")
library(dyplr)
library(dplyr)
acs <- data.table("acs.csv")
acs <- data.table("acs.csv")
acs <- read.table("acs.csv")
library(sqldf)
sqldf("select pwgtp1 from acs")
sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs")
dbConnect(MySQL())
acs <- read.csv("acs.csv")
sqldf("select * from acs")
library(sqldf)
acs <- read.csv("acs.csv")
sqldf("select * from acs")
library(RMySQL)
library(sqldf)
acs <- read.csv("acs.csv")
sqldf("select * from acs")
mydb = dbConnect(MySQL(), user='user', password='password', dbname='database_name', host='host')
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
main()
fit <- lm(Numeric ~ Year)
bye9
bye()
swirl()
qplot(hwy, data = mpg, facets=drv ~ ., binwidth=2)
qplot(price, diamonds, geom="density")
qplot(price, data =diamonds, geom="density")
qplot(price, data =diamonds, geom="density", color=cut)
qplot(carat, price, dataset)
qplot(carat, price, data =dataset)
qplot(carat, price, diamonds)
qplot(carat, price, data =diamonds)
qplot(carat, price, data =diamonds, shape =cut)
qplot(carat, price, data =diamonds, color =cut)
qplot(carat, price, data =diamonds, color =cut, geom = c("point", "smooth"), method="lm")
qplot(carat, price, data =diamonds, color =cut, geom = c("point", "smooth"))
qplot(carat, price, data =diamonds, color =cut, geom = c("point", "smooth"), method="lm")
qplot(carat,price,data=diamonds, color=cut,geom=c("point","smooth"),method="lm")
library(ggplot2)
qplot(carat,price,data=diamonds, color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds, color=cut,geom=c("point","smooth"), method="lm")
qplot(carat,price,data=diamonds, color=cut,geom=c("point","smooth"),method="lm")
skip()
swirl()
skip()
swirl()
dfa
qplot
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
table(kClust$cluster, sub1$activity)
kmeans(sub1)
kClust <- kmeans(sub1$activity, centers = 6, nstart = 100)
kClust <- kmeans(sub1, centers = 6, nstart = 100)
skip()
table(kClust$cluster, sub1$activity)
dim(kClust)
dim(kClust$centers)
laying <- kClust$size==29
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying cluster")
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[wakdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
fit <- lm(hunger~year)
fit <- lm()
fit
fit <- lm(Numeric ~ Year, hunger)
fit$coefficients
summary(fit)$coef
x[hunger$Sex=="Female"]
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmBoth <- lm(hunger$Numeric[hunger$Sex] ~ hunger$Year[hunger$Sex])
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex)
lmBoth
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year)
lmInter <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex + hunger$Sex*hunger$Year)
lmInter
summary(lmInter)
sum()
sum(pValues < 0.05)
sum
sum(p.adjust(pValues, method = "bonferroni") < 0.05)
sum(p.adjust(pValues, method = "BH") < 0.05)
tail(trueStatus)
pValues2 < 0.05
table(pValues2 < 0.05, trueStatus)
476/500
24/500
table(p.adjust(pValues, method = "bonferroni") < 0.05)
table(p.adjust(pValues2, method = "bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2, method = "BH") < 0.05, trueStatus)
cnames[[1[wcol]]]
cnames[[1]][wcol]
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <-
x0 <- pm0$NA.
x0 <- pm0$Sample.Value
x0 <- pm0$Sample.Value
pm0
head(pm0)
install.packages("prettyR")
install.packages("RevoScaleR")
devtools::install_github("WinVector/WVPlots")
install.packages("miniCran")
install.packages("pryr")
install.packages("gpuR")
install.packages("manipulate")
install.packages("forecastHybrid")
library(TTR)
library(drat)
install.packages("drat")
install.packages("xgboost")
install.packages("webshot")
install.packages("raster")
install.packages("FSA")
install.packages("rvest")
install.packages("genderizeR")
install.packages("idbr")
install.packages("countrycode")
install.packages("gganimate")
install.packages("tweenr")
install.packages("animation")
install.packages("BetaBit")
install.packages("ExPosition")
library(MASS)
install.packages("MASS")
install.packages("directlabels")
install.packages("corrplot")
install.packages("gbm")
install.packages("pROC")
install.packages("vtreat")
install.packages("doMC")
install.packages("geometry")
install.packages("geomorph")
install.packages("data.tree")
install.packages("Rhipe")
install.packages("rmr")
install.packages("heatmaply")
install.packages("bootStepAIC")
install.packages("mlbench")
install.packages("pwr")
install.packages("dygraphs")
install.packages("QuantPsyc")
install.packages("bdvis")
install.packages("manhattanly")
install.packages("sitools")
setwd("~/GitHub")
setwd("~/GitHub/Pollutantmean")
<unzip("specdata.zip")
unzip("specdata.zip")
read.csv("specdata")
file.path("specdata", "")
read.csv("001.csv")
setwd("~/GitHub/Pollutantmean/specdata")
read.csv("001.csv")
swirl()
library(swirl)
swirl()
swirl()
ls
ls()
